*, *::before, *::after {
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: bold;
  font-size: 7vmin;
}

body {
  min-height: 100vh;
  background: hsl(200, 0%, 25%);
  overflow: hidden;
  display: grid;
  place-items: center;
}

#grid {
  --GAP: 1.5vmin;
  --SIZE: 20vmin;
  --RADIUS: 2vmin;
  background: hsl(200, 0%, 75%);
  display: grid;
  grid-template-rows: repeat(var(--ROWS), var(--SIZE));
  grid-template-columns: repeat(var(--COLS), var(--SIZE));
  border-radius: var(--RADIUS);
  gap: var(--GAP);
  padding: var(--GAP);
  position: relative;
}

.cell {
  background: hsl(200, 0%, 60%);
  border-radius: var(--RADIUS);
  width: var(--SIZE);
  height: var(--SIZE);
}

.tile {
  width: var(--SIZE);
  height: var(--SIZE);
  border-radius: var(--RADIUS);
  position: absolute;
  display: grid;
  place-items: center;
  top: calc(var(--Y) * (var(--SIZE) + var(--GAP)) + var(--GAP));
  left: calc(var(--X) * (var(--SIZE) + var(--GAP)) + var(--GAP));
  animation: popout var(--DURATION);
  animation-fill-mode: forwards;
  transition-property: top, left;
  transition-duration: calc(var(--DIST) * var(--DURATION));
  transition-timing-function: linear;
}

.merge {
  animation: merge var(--DURATION) ease var(--DELAY);
  animation-fill-mode: forwards;
}

@keyframes popout {
  from {
    transform: scale(0)
  }
  to {
    transform: scale(1)
  }
}

@keyframes merge {
  80% {
    transform: scale(1.2)
  }
  100% {
    transform: scale(1)
  }
}